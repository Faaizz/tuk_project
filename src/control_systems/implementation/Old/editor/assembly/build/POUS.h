#include "beremiz.h"
#ifndef __POUS_H
#define __POUS_H

#include "accessor.h"
#include "iec_std_lib.h"

__DECLARE_ENUMERATED_TYPE(LOGLEVEL,
  LOGLEVEL__CRITICAL,
  LOGLEVEL__WARNING,
  LOGLEVEL__INFO,
  LOGLEVEL__DEBUG
)
// FUNCTION_BLOCK LOGGER
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(BOOL,TRIG)
  __DECLARE_VAR(STRING,MSG)
  __DECLARE_VAR(LOGLEVEL,LEVEL)

  // FB private variables - TEMP, private and located variables
  __DECLARE_VAR(BOOL,TRIG0)

} LOGGER;

void LOGGER_init__(LOGGER *data__, BOOL retain);
// Code part
void LOGGER_body__(LOGGER *data__);
// FUNCTION_BLOCK PYTHON_EVAL
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(BOOL,TRIG)
  __DECLARE_VAR(STRING,CODE)
  __DECLARE_VAR(BOOL,ACK)
  __DECLARE_VAR(STRING,RESULT)

  // FB private variables - TEMP, private and located variables
  __DECLARE_VAR(DWORD,STATE)
  __DECLARE_VAR(STRING,BUFFER)
  __DECLARE_VAR(STRING,PREBUFFER)
  __DECLARE_VAR(BOOL,TRIGM1)
  __DECLARE_VAR(BOOL,TRIGGED)

} PYTHON_EVAL;

void PYTHON_EVAL_init__(PYTHON_EVAL *data__, BOOL retain);
// Code part
void PYTHON_EVAL_body__(PYTHON_EVAL *data__);
// FUNCTION_BLOCK PYTHON_POLL
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(BOOL,TRIG)
  __DECLARE_VAR(STRING,CODE)
  __DECLARE_VAR(BOOL,ACK)
  __DECLARE_VAR(STRING,RESULT)

  // FB private variables - TEMP, private and located variables
  __DECLARE_VAR(DWORD,STATE)
  __DECLARE_VAR(STRING,BUFFER)
  __DECLARE_VAR(STRING,PREBUFFER)
  __DECLARE_VAR(BOOL,TRIGM1)
  __DECLARE_VAR(BOOL,TRIGGED)

} PYTHON_POLL;

void PYTHON_POLL_init__(PYTHON_POLL *data__, BOOL retain);
// Code part
void PYTHON_POLL_body__(PYTHON_POLL *data__);
// FUNCTION_BLOCK PYTHON_GEAR
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(UINT,N)
  __DECLARE_VAR(BOOL,TRIG)
  __DECLARE_VAR(STRING,CODE)
  __DECLARE_VAR(BOOL,ACK)
  __DECLARE_VAR(STRING,RESULT)

  // FB private variables - TEMP, private and located variables
  PYTHON_EVAL PY_EVAL;
  __DECLARE_VAR(UINT,COUNTER)
  __DECLARE_VAR(UINT,ADD10_OUT)
  __DECLARE_VAR(BOOL,EQ13_OUT)
  __DECLARE_VAR(UINT,SEL15_OUT)
  __DECLARE_VAR(BOOL,AND7_OUT)

} PYTHON_GEAR;

void PYTHON_GEAR_init__(PYTHON_GEAR *data__, BOOL retain);
// Code part
void PYTHON_GEAR_body__(PYTHON_GEAR *data__);
// PROGRAM ASSEMBLY
// Data part
typedef struct {
  // PROGRAM Interface - IN, OUT, IN_OUT variables

  // PROGRAM private variables - TEMP, private and located variables
  __DECLARE_VAR(BOOL,RP_AL1_CLAMPED)
  __DECLARE_VAR(BOOL,AL1_DETECTED)
  __DECLARE_VAR(BOOL,LP_AL1_CLAMPED)
  __DECLARE_VAR(BOOL,LP_AL1_LIMIT)
  __DECLARE_VAR(BOOL,RUNNING)
  __DECLARE_VAR(WORD,AL1_X_POS)
  __DECLARE_VAR(WORD,AL1_Y_POS)
  __DECLARE_VAR(WORD,AL1_Z_POS)
  __DECLARE_VAR(BOOL,AL1_GRAB)
  __DECLARE_VAR(BOOL,RP_AL1_CLAMP)
  __DECLARE_VAR(BOOL,LP_AL1_CLAMP)
  __DECLARE_VAR(BOOL,LP_AL1_RAISE)
  __DECLARE_VAR(WORD,AL1_X_SET)
  __DECLARE_VAR(WORD,AL1_Y_SET)
  __DECLARE_VAR(WORD,AL1_Z_SET)
  __DECLARE_VAR(BOOL,PLF3)
  __DECLARE_VAR(BOOL,PLF4)
  __DECLARE_VAR(BOOL,PBF3)
  __DECLARE_VAR(BOOL,PBF4)
  __DECLARE_VAR(BOOL,PL9)
  __DECLARE_VAR(BOOL,PB9)
  __DECLARE_VAR(BOOL,PA0)
  __DECLARE_VAR(BOOL,PA1)
  __DECLARE_VAR(BOOL,PA2)
  __DECLARE_VAR(BOOL,PA3)
  __DECLARE_VAR(BOOL,PA4)
  __DECLARE_VAR(BOOL,PA5)
  __DECLARE_VAR(BOOL,PA6)
  __DECLARE_VAR(BOOL,PA7)
  __DECLARE_VAR(BOOL,PA8)
  __DECLARE_VAR(BOOL,PA9)
  __DECLARE_VAR(BOOL,PA10)
  __DECLARE_VAR(BOOL,PA11)
  __DECLARE_VAR(BOOL,PA12)
  __DECLARE_VAR(BOOL,PA13)
  __DECLARE_VAR(BOOL,STABLE)

} ASSEMBLY;

void ASSEMBLY_init__(ASSEMBLY *data__, BOOL retain);
// Code part
void ASSEMBLY_body__(ASSEMBLY *data__);
#endif //__POUS_H
