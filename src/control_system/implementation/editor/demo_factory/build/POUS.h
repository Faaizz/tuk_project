#include "beremiz.h"
#ifndef __POUS_H
#define __POUS_H

#include "accessor.h"
#include "iec_std_lib.h"

__DECLARE_ENUMERATED_TYPE(LOGLEVEL,
  LOGLEVEL__CRITICAL,
  LOGLEVEL__WARNING,
  LOGLEVEL__INFO,
  LOGLEVEL__DEBUG
)
// FUNCTION_BLOCK LOGGER
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(BOOL,TRIG)
  __DECLARE_VAR(STRING,MSG)
  __DECLARE_VAR(LOGLEVEL,LEVEL)

  // FB private variables - TEMP, private and located variables
  __DECLARE_VAR(BOOL,TRIG0)

} LOGGER;

void LOGGER_init__(LOGGER *data__, BOOL retain);
// Code part
void LOGGER_body__(LOGGER *data__);
// FUNCTION_BLOCK PYTHON_EVAL
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(BOOL,TRIG)
  __DECLARE_VAR(STRING,CODE)
  __DECLARE_VAR(BOOL,ACK)
  __DECLARE_VAR(STRING,RESULT)

  // FB private variables - TEMP, private and located variables
  __DECLARE_VAR(DWORD,STATE)
  __DECLARE_VAR(STRING,BUFFER)
  __DECLARE_VAR(STRING,PREBUFFER)
  __DECLARE_VAR(BOOL,TRIGM1)
  __DECLARE_VAR(BOOL,TRIGGED)

} PYTHON_EVAL;

void PYTHON_EVAL_init__(PYTHON_EVAL *data__, BOOL retain);
// Code part
void PYTHON_EVAL_body__(PYTHON_EVAL *data__);
// FUNCTION_BLOCK PYTHON_POLL
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(BOOL,TRIG)
  __DECLARE_VAR(STRING,CODE)
  __DECLARE_VAR(BOOL,ACK)
  __DECLARE_VAR(STRING,RESULT)

  // FB private variables - TEMP, private and located variables
  __DECLARE_VAR(DWORD,STATE)
  __DECLARE_VAR(STRING,BUFFER)
  __DECLARE_VAR(STRING,PREBUFFER)
  __DECLARE_VAR(BOOL,TRIGM1)
  __DECLARE_VAR(BOOL,TRIGGED)

} PYTHON_POLL;

void PYTHON_POLL_init__(PYTHON_POLL *data__, BOOL retain);
// Code part
void PYTHON_POLL_body__(PYTHON_POLL *data__);
// FUNCTION_BLOCK PYTHON_GEAR
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(UINT,N)
  __DECLARE_VAR(BOOL,TRIG)
  __DECLARE_VAR(STRING,CODE)
  __DECLARE_VAR(BOOL,ACK)
  __DECLARE_VAR(STRING,RESULT)

  // FB private variables - TEMP, private and located variables
  PYTHON_EVAL PY_EVAL;
  __DECLARE_VAR(UINT,COUNTER)
  __DECLARE_VAR(UINT,ADD10_OUT)
  __DECLARE_VAR(BOOL,EQ13_OUT)
  __DECLARE_VAR(UINT,SEL15_OUT)
  __DECLARE_VAR(BOOL,AND7_OUT)

} PYTHON_GEAR;

void PYTHON_GEAR_init__(PYTHON_GEAR *data__, BOOL retain);
// Code part
void PYTHON_GEAR_body__(PYTHON_GEAR *data__);
// PROGRAM DEMO_FACTORY
// Data part
typedef struct {
  // PROGRAM Interface - IN, OUT, IN_OUT variables

  // PROGRAM private variables - TEMP, private and located variables
  __DECLARE_VAR(BOOL,ST_X)
  __DECLARE_VAR(BOOL,ST_Z)
  __DECLARE_VAR(BOOL,S_L)
  __DECLARE_VAR(BOOL,SL_P)
  __DECLARE_VAR(BOOL,SL_M)
  __DECLARE_VAR(BOOL,SBC)
  __DECLARE_VAR(BOOL,SB_P)
  __DECLARE_VAR(BOOL,SB_M)
  __DECLARE_VAR(BOOL,RESET)
  __DECLARE_VAR(BOOL,AT_X)
  __DECLARE_VAR(BOOL,AT_Z)
  __DECLARE_VAR(BOOL,AT_G)
  __DECLARE_VAR(BOOL,AL_C)
  __DECLARE_VAR(BOOL,AL_M)
  __DECLARE_VAR(BOOL,RB_M)
  __DECLARE_VAR(BOOL,AB_C)
  __DECLARE_VAR(BOOL,AB_M)
  TON TM_1_TA1;
  TON TM_1_TC3;
  TON TM_1_TB1;
  TON TM_1_TD3;
  TON TM_2_TA3;
  TON TM_2_TB3;
  __DECLARE_VAR(BOOL,STABLE)
  __DECLARE_VAR(BOOL,PA1)
  __DECLARE_VAR(BOOL,PA2)
  __DECLARE_VAR(BOOL,PA3)
  __DECLARE_VAR(BOOL,PA4)
  __DECLARE_VAR(BOOL,PB1)
  __DECLARE_VAR(BOOL,PB2)
  __DECLARE_VAR(BOOL,PB3)
  __DECLARE_VAR(BOOL,PB4)
  __DECLARE_VAR(BOOL,PC1)
  __DECLARE_VAR(BOOL,PC2)
  __DECLARE_VAR(BOOL,PC3)
  __DECLARE_VAR(BOOL,PC4)
  __DECLARE_VAR(BOOL,PC5)
  __DECLARE_VAR(BOOL,PC6)
  __DECLARE_VAR(BOOL,PC7)
  __DECLARE_VAR(BOOL,PC8)
  __DECLARE_VAR(BOOL,PD1)
  __DECLARE_VAR(BOOL,PD2)
  __DECLARE_VAR(BOOL,PD3)
  __DECLARE_VAR(BOOL,PE1)
  __DECLARE_VAR(BOOL,PE2)
  __DECLARE_VAR(BOOL,PE3)
  __DECLARE_VAR(BOOL,PE4)
  __DECLARE_VAR(BOOL,PE5)
  __DECLARE_VAR(BOOL,PE6)
  __DECLARE_VAR(BOOL,PE7)
  __DECLARE_VAR(BOOL,PF1)
  __DECLARE_VAR(BOOL,PF2)
  __DECLARE_VAR(BOOL,PF3)
  __DECLARE_VAR(BOOL,PF4)
  __DECLARE_VAR(BOOL,PF5)

} DEMO_FACTORY;

void DEMO_FACTORY_init__(DEMO_FACTORY *data__, BOOL retain);
// Code part
void DEMO_FACTORY_body__(DEMO_FACTORY *data__);
#endif //__POUS_H
